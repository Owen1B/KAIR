{
  //-----------------全局设置---------------------
  "task": "swinir_spect",     // 名称
  "model": "plain",                     // 模型类型："plain"｜"gan"
  "gpu_ids": [0],                       // 使用GPU ID
  "scale": 1,                           // 放大倍数，SPECT降噪设为1即可
  "n_channels": 2,                      // 输入通道数，2表示前后位
  "speed": 4,                           // 快速扫描倍数，4表示25%剂量扫描，用于生成低计数图像
  "normalization": "log",               // 归一化方式："anscombe" | "log"
  //-----------------路径设置---------------------
  "path": {
    "root": "SPECTdenoising",              // 保存路径
    "pretrained_netG": null,               // 预训练模型的路径
    "pretrained_netE": null                // 预训练EMA模型的路径
  },
  //-----------------wandb设置---------------------
  "wandb" : {
    "entity":"owen1b_",
    "project": "bone_scan_denoising"
  },
  //-----------------数据集设置---------------------
  "datasets": {
    "train": {
      "name": "train_dataset",          // 仅作为名称
      "dataset_type": "spect",          // SPECT专用dataset
      "dataroot_H": "trainsets/spectH", // 训练数据集H的路径
      "dataroot_L": "trainsets/spectL_4x",               // 训练数据集L的路径
      "H_size": 64,                    // 图像块大小：40 | 64 | 96 | 128 | 192
      "num_patches_per_image": 128,
      "num_sampled": 96,
      "dataloader_shuffle": true,       // 是否打乱数据集
      "dataloader_num_workers": 8,      // 数据加载器的工作线程数
      "dataloader_batch_size": 4       // 批量大小：1 | 16 | 32 | 48 | 64 | 128
    },
    "test": {
      "name": "test_dataset",           // 仅作为名称
      "dataset_type": "spect",          // SPECT专用dataset
      "dataroot_H": "testsets/spectH",  // 测试数据集H的路径
      "dataroot_L": "testsets/spectL_4x"              // 测试数据集L的路径
    }
  },
  //-----------------网络设置---------------------
  "netG": {
    "net_type": "swinir",                  // 网络类型
    "upscale": 1,                          // 放大倍数
    "in_chans": 2,                         // 输入通道数
    "img_size": 64,                       // 图像大小
    "window_size": 8,                      // 窗口大小
    "img_range": 1.0,                      // 图像范围
    "depths": [6, 6, 6, 6, 6, 6],          // 各阶段深度
    "embed_dim": 180,                      // 嵌入维度
    "num_heads": [6, 6, 6, 6, 6, 6],       // 注意力头数
    "mlp_ratio": 2,                        // MLP比率
    "upsampler": null,                     // 上采样方式
    "resi_connection": "1conv",            // 残差连接方式
    "init_type": "default"                 // 初始化方式
  },
  //-----------------训练设置---------------------
"train": {
    "manual_seed": 20020113,            // 随机种子
    "G_lossfn_type": "charbonnier",              // 推荐使用"l1" | "l2sum" | "l2" | "ssim" | "charbonnier"
    "G_lossfn_weight": 1.0,                       // 默认值
    "G_charbonnier_eps": 1e-9,                    // Charbonnier损失的epsilon参数

    "E_decay": 0.999,                             // 指数滑动平均，设为0表示不使用，默认0.999

    "G_optimizer_type": "adam",                  // 优化器类型："adam"
    "G_optimizer_lr": 2e-4,             // 学习率
    "G_optimizer_wd": 0,                // 权重衰减，默认0
    "G_optimizer_clipgrad": null,       // 梯度裁剪
    "G_optimizer_reuse": true,          // 是否重用优化器状态（从之前的检查点加载）

    "G_scheduler_type": "MultiStepLR",  // 学习率调度器类型："MultiStepLR"
    "G_scheduler_milestones": [4000, 8000, 12000, 16000],  // 学习率下降的里程碑（epoch）
    "G_scheduler_gamma": 0.5,           // 学习率衰减系数，每到达一个里程碑，学习率乘以该系数

    "G_regularizer_orthstep": null,     // 正交正则化步长，null表示不使用
    "G_regularizer_clipstep": null,     // 权重裁剪步长，null表示不使用

    "G_param_strict": true,             // 是否严格加载参数
    "E_param_strict": true,             // 是否严格加载EMA参数

    "checkpoint_print": 1,              // 打印损失间隔（epoch）
    "checkpoint_test": 100,             // 验证指标间隔（epoch）
    "checkpoint_save": 1000,             // 保存模型间隔（epoch）
    "epochs": 20000                           // 训练总epoch
  }
}
